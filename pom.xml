<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017  The Hyve and respective contributors.
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ See the file LICENSE in the root of this repository.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>1.5.2.RELEASE</version>
        <relativePath />
    </parent>

    <groupId>nl.thehyve.podium</groupId>
    <artifactId>podium</artifactId>
    <version>0.0.1</version>
    <name>Podium</name>
    <packaging>pom</packaging>

    <modules>
        <module>podium-common</module>
        <module>podium-uaa</module>
        <module>podium-gateway</module>
    </modules>

    <prerequisites>
        <maven>${maven.version}</maven>
    </prerequisites>

    <properties>
        <cdi-api.version>1.2</cdi-api.version>
        <java.version>1.8</java.version>
        <maven.version>3.0.0</maven.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <spring-boot.version>1.4.3.RELEASE</spring-boot.version>
        <argLine>-Djava.security.egd=file:/dev/./urandom -Xmx256m</argLine>
        <assertj.version>3.6.2</assertj.version>
        <awaitility.version>2.0.0</awaitility.version>
        <commons-codec.version>1.10</commons-codec.version>
        <commons-io.version>2.5</commons-io.version>
        <commons-lang.version>3.5</commons-lang.version>
        <datastax-driver.version>3.0.1</datastax-driver.version>
        <docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>
        <flowable.version>6.0.0</flowable.version>
        <frontend-maven-plugin.version>1.3</frontend-maven-plugin.version>
        <gatling.version>2.2.3</gatling.version>
        <gatling-maven-plugin.version>2.2.1</gatling-maven-plugin.version>
        <hazelcast-wm.version>3.8</hazelcast-wm.version>
        <hazelcast-hibernate52.version>1.2</hazelcast-hibernate52.version>
        <hibernate-validator.version>5.3.4.Final</hibernate-validator.version>
        <hibernate.version>5.2.7.Final</hibernate.version>
        <hikaricp.version>2.6.0</hikaricp.version>
        <jacoco-maven-plugin.version>0.7.7.201606060606</jacoco-maven-plugin.version>
        <javassist.version>3.21.0-GA</javassist.version>
        <jcache.version>1.0.0</jcache.version>
        <jna.version>4.3.0</jna.version>
        <jzlib.version>1.1.3</jzlib.version>
        <liquibase-hibernate5.version>3.6</liquibase-hibernate5.version>
        <liquibase-slf4j.version>2.0.0</liquibase-slf4j.version>
        <liquibase.version>3.5.3</liquibase.version>
        <logstash-logback-encoder.version>4.7</logstash-logback-encoder.version>
        <lz4.version>1.3.0</lz4.version>
        <m2e.apt.activation>jdt_apt</m2e.apt.activation>
        <mapstruct.version>1.1.0.Final</mapstruct.version>
        <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
        <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <metrics-spring.version>3.1.3</metrics-spring.version>
        <node.version>v6.9.4</node.version>
        <postgresql.version>9.4.1212</postgresql.version>
        <!-- These remain empty unless the corresponding profile is active -->
        <profile.no-liquibase />
        <profile.swagger />
        <!-- Sonar properties -->
        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
        <prometheus-simpleclient.version>0.0.20</prometheus-simpleclient.version>
        <run.addResources>false</run.addResources>
        <scala-maven-plugin.version>3.2.2</scala-maven-plugin.version>
        <scala.version>2.12.1</scala.version>
        <sonar-maven-plugin.version>3.2</sonar-maven-plugin.version>

        <sonar.exclusions>src/main/webapp/content/**/*.*, src/main/webapp/bower_components/**/*.*, src/main/webapp/i18n/*.js, target/www/**/*.*</sonar.exclusions>
        <sonar.host.url>http://localhost:32768</sonar.host.url>
        <sonar.issue.ignore.multicriteria>S3437,UndocumentedApi,BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria>

        <!-- Rule https://sonarqube.com/coding_rules#rule_key=Web%3ABoldAndItalicTagsCheck is ignored. Even if we agree that using the "i" tag is an awful practice, this is what is recommended by http://fontawesome.io/examples/ -->
        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>src/main/webapp/app/**/*.*</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>
        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>Web:BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>
        <!-- Rule https://sonarqube.com/coding_rules#rule_key=squid%3AS3437 is ignored, as a JPA-managed field cannot be transient -->
        <sonar.issue.ignore.multicriteria.S3437.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S3437.resourceKey>
        <sonar.issue.ignore.multicriteria.S3437.ruleKey>squid:S3437</sonar.issue.ignore.multicriteria.S3437.ruleKey>
        <!-- Rule http://sonarqube.com/coding_rules#rule_key=squid%3AUndocumentedApi is ignored, as we want to follow "clean code" guidelines and classes, methods and arguments names should be self-explanatory -->
        <sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>
        <sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>squid:UndocumentedApi</sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>

        <sonar.jacoco.itReportPath>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.jacoco.reportPath>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>

        <sonar.javascript.jstestdriver.reportsPath>${project.testresult.directory}/karma</sonar.javascript.jstestdriver.reportsPath>
        <!-- For Sonar < 6.2 -->
        <sonar.javascript.lcov.reportPath>${project.testresult.directory}/coverage/report-lcov/lcov.info</sonar.javascript.lcov.reportPath>
        <!-- For Sonar >= 6.2 -->
        <sonar.javascript.lcov.reportPaths>${project.testresult.directory}/coverage/report-lcov/lcov.info</sonar.javascript.lcov.reportPaths>

        <sonar.sources>${project.basedir}/src/main/</sonar.sources>
        <sonar.surefire.reportsPath>${project.testresult.directory}/surefire-reports</sonar.surefire.reportsPath>
        <sonar.tests>${project.basedir}/src/test/</sonar.tests>

        <sortpom-maven-plugin.version>2.5.0</sortpom-maven-plugin.version>

        <!-- Spring properties -->
        <spring-cloud.version>Camden.SR4</spring-cloud.version>
        <spring-cloud-netflix.version>1.2.5.RELEASE</spring-cloud-netflix.version>
        <spring-security.version>4.2.1.RELEASE</spring-security.version>
        <spring-security-oauth.version>2.0.12.RELEASE</spring-security-oauth.version>
        <springfox.version>2.6.1</springfox.version>
        <yarn.version>v0.19.1</yarn.version>
        <validation-api.version>1.1.0.Final</validation-api.version>
        <javax-servlet-api.version>3.1.0</javax-servlet-api.version>
        <wiremock.version>2.6.0</wiremock.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-netflix-core</artifactId>
                <version>${spring-cloud-netflix.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <repository>
            <id>nl.thehyve.nexus</id>
            <name>The Hyve - Nexus repository</name>
            <url>https://repo.thehyve.nl/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>nl.thehyve.nexus</id>
            <name>The Hyve - Nexus repository</name>
            <url>https://repo.thehyve.nl/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>
